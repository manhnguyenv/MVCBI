@using BI.Models.POCO
@using System.Linq
@model BackEndReportLedgerAnAccountList
<style>
  thead > tr > th {
    text-align: center;
  }

  #table-summary-1 th, #table-summary-2 th {
    width: 84%;
  }

  #table-summary-1 th, #table-summary-1 td, #table-summary-2 th, #table-summary-2 td {
    text-align: right;
  }

  #table-summary-1 tr:nth-child(even), #table-summary-2 tr:nth-child(even) {
    background-color: #f9f9f9;
  }

  table th, td {
    text-align: left;
  }
</style>
<div class="row">
  <div class="col-lg-12">
    @using (Html.BootstrapBeginForm(formMethod: FormMethod.Get, isDirtyFormMonitored: false))
    {
      <div class="panel panel-default">
        <div class="panel-body">
          @Html.BootstrapValidationSummary()
          <div class="col-sm-12">
            @{
              var blankList_DmDvcs = new List<DmDvcs>();
              if (Model != null && Model.DmDvcss != null)
              {
                var selectListItems_DmDvcs = new SelectList(Model.DmDvcss, "Ma_Dvcs", "Ten_Dvcs_UTF8", Model.MaDonVi);
                @Html.BootstrapDropDownListFor(m => m.MaDonVi, selectListItems_DmDvcs)
              }
              else
              {
                var selectListItems_DmDvcs = new SelectList(blankList_DmDvcs, "Ma_Dvcs", "Ten_Dvcs_UTF8", Model.MaDonVi);
                @Html.BootstrapDropDownListFor(m => m.MaDonVi, selectListItems_DmDvcs)
              }
            }
          </div>
          <div class="clearfix"></div>
          <div class="col-sm-12">
            @{
              var blankList_DmTk = new List<DmTk>();
              if (Model != null && Model.DmTks != null)
              {
                var selectListItems_DmTk = new SelectList(Model.DmTks, "Tk", "Ten_Tk_UTF8", Model.UserId);
                @Html.BootstrapDropDownListFor(m => m.UserId, selectListItems_DmTk)
              }
              else
              {
                var selectListItems_DmTk = new SelectList(blankList_DmTk, "Tk", "Ten_Tk_UTF8", Model.UserId);
                @Html.BootstrapDropDownListFor(m => m.UserId, selectListItems_DmTk)
              }
            }
          </div>
          <div class="clearfix"></div>

          <div class="col-sm-6">
            @Html.BootstrapDatePickerFor(m => m.StartDate)
          </div>
          <div class="col-sm-6">
            @Html.BootstrapDatePickerFor(m => m.EndDate)
          </div>
        </div>
        <div class="panel-footer">
          @Html.BootstrapApplyFilter()
          @Html.BootstrapResetFilter()
        </div>
      </div>
    }
  </div>
</div>
<div class="row">
  <div class="col-lg-12">
    <div class="table-responsive">
      @if (Model.ReportLedgerAnAccounts.ListLedgerAnAccount.IgnoreNulls().Any())
      {
        using (Html.BootstrapBeginForm("", "", isDirtyFormMonitored: false))
        {
          @Html.AntiForgeryToken()

          <table id="table-summary-1" class="table table-striped table-bordered table-hover footable toggle-square footable-loaded">
            <tr>
              <th>Số dư đầu kỳ</th>
              <td style="font-weight: bold;">
                @{
                  decimal Du_dau_ky = Model.ReportLedgerAnAccounts.ListLedgerAnAccountSummary.FirstOrDefault().Du_dau_ky;
                  string duDauKy = DataHelper.FormatDecimal(Du_dau_ky);
                  <text>@duDauKy</text>
                }
              </td>
            </tr>
          </table>

          WebGridHelper webGrid = new WebGridHelper(Model.ReportLedgerAnAccounts.ListLedgerAnAccount, defaultSort: "Ngay_ct", sortDirection: SortDirection.Ascending, rowsPerPage: 10);
          @webGrid.GetExtendedHtml(
              columns: webGrid.ExtendedColumns(
               webGrid.ExtendedColumn("Ngay_ct", "Ngày Ct", @<text>@(item.Ngay_ct == null ? "" : item.Ngay_ct.ToString("dd-MM-yyyy"))</text>),
                 webGrid.ExtendedColumn("So_ct", "Số Ct"),
                 webGrid.ExtendedColumn("Ma_Kh", "Mã khách"),
                 webGrid.ExtendedColumn("Ten_Kh_UTF8", "Tên khách"),
                 webGrid.ExtendedColumn("Dien_giai_UTF8", "Diễn giải"),
                 webGrid.ExtendedColumn("Tk_du", "Tk Đ/ứ"),
                 webGrid.ExtendedColumn("Ps_no_fm", "Ps nợ", null, style: "currency-vnd"),
                 webGrid.ExtendedColumn("Ps_co_fm", "Ps có", null, style: "currency-vnd"),
                 webGrid.ExtendedColumn("Ma_vv", "Vụ việc"),
                 webGrid.ExtendedColumn("Ma_ct", "Mã Ct")
            ));

          <table id="table-summary-2" class="table table-striped table-bordered table-hover footable toggle-square footable-loaded">
            <tr>
              <th>Tổng phát sinh nợ</th>
              <td style="font-weight: bold;">
                @{
                  decimal tongPs_no = (from x in Model.ReportLedgerAnAccounts.ListLedgerAnAccount
                                       where x.Ps_no != null
                                       select x.Ps_no.Value).Sum();
                  string tongPsNo = DataHelper.FormatDecimal(tongPs_no);
                  <text>@tongPsNo</text>
                }
              </td>
            </tr>
            <tr>
              <th>Tổng phát sinh có</th>
              <td style="font-weight: bold;">
                @{
                  decimal tongPs_co = (from x in Model.ReportLedgerAnAccounts.ListLedgerAnAccount
                                       where x.Ps_co != null
                                       select x.Ps_co.Value).Sum();
                  string tongPsCo = DataHelper.FormatDecimal(tongPs_co);
                  <text>@tongPsCo</text>
                }
              </td>
            </tr>
            <tr>
              <th>Số dư cuối kỳ</th>
              <td style="font-weight: bold;">
                @{
                  decimal Du_cuoi_ky = Model.ReportLedgerAnAccounts.ListLedgerAnAccountSummary.FirstOrDefault().Du_cuoi_ky;
                  string duCuoiKy = DataHelper.FormatDecimal(Du_cuoi_ky);
                  <text>@duCuoiKy</text>
                }
              </td>
            </tr>
          </table>
        }
      }
    </div>
  </div>
</div>
